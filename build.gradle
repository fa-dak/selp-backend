plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'org.fadak.selp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springAiVersion', "1.0.0")
}

bootJar {
    archiveFileName = 'app.jar'
}

dependencies {
    // spring boot starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // spring devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // spring security
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    testImplementation 'org.springframework.security:spring-security-test'

    // jwt (jsonwebtoken)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // spring starter - spring ai
    implementation 'org.springframework.ai:spring-ai-advisors-vector-store'
    implementation 'org.springframework.ai:spring-ai-starter-model-openai'
    implementation 'org.springframework.ai:spring-ai-starter-vector-store-chroma'

    // spring validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // mybatis
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
//    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    // jpa
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:3.5.3")
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // db
    runtimeOnly 'com.mysql:mysql-connector-j'

    // file
    implementation("io.minio:minio:8.5.7")
//    implementation("io.awspring.cloud:spring-cloud-starter-aws:3.0.2")


    //firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // test
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
